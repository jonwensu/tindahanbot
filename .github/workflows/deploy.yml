name: Deploy Discord Bot to VPS via Docker Compose

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

      - name: SSH into VPS and clone the repository
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            
            rm -rf ~/apps/tindahanbot

            mkdir -p ~/apps/tindahanbot

            cd ~/apps/tindahanbot

            git clone https://github.com/${{ github.repository }} .
          EOF

      - name: Generate .env file on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/apps/tindahanbot
            echo "BOT_PREFIX=${{ secrets.BOT_PREFIX }}" > .env
            echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_URL=\"${{ secrets.DB_URL }}\"" >> .env
            echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
            echo "OWNER_IDS=${{ secrets.OWNER_IDS }}" >> .env
            echo "TEST_ONLY=${{ secrets.TEST_ONLY }}" >> .env
            echo "TEST_SERVERS=${{ secrets.TEST_SERVERS }}" >> .env
          EOF

      - name: Build and Deploy Docker Compose on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/apps/tindahanbot
            docker-compose down
            docker-compose up -d bot
          EOF
